---

pr_handlers: &pr_handlers
  on_success:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> passed :+1:
            $TEXT_FILE_CONTENT
          text_file: files/slack
      - put: pull-request
        params:
          path: pull-request
          context: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME"
          status: success
          comment: |
            [$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) passed :+1:
          comment_file: files/output
          delete_previous_comments: true
  on_failure:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> failed :-1:
            $TEXT_FILE_CONTENT
          text_file: files/slack
          # attachments:
          #   - title: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME build #$BUILD_NAME failed"
          #     title_link: "$ATC_EXTERNAL_URL/builds/$BUILD_ID"
          #     text: this is the attachments text
          #     footer: this is the attachments footer
          #     color: danger
      - put: pull-request
        params:
          path: pull-request
          context: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME"
          status: failure
          comment: |
            [$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME]($ATC_EXTERNAL_URL/builds/$BUILD_ID) failed :-1:
          comment_file: files/output
          delete_previous_comments: true
  on_abort:
    in_parallel:
      - put: slack-alert
        params:
          alert_type: aborted
      - put: pull-request
        params:
          path: pull-request
          context: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME"
          status: failure
  on_error:
    in_parallel:
      - put: slack-alert
        params:
          alert_type: errored
      - put: pull-request
        params:
          path: pull-request
          context: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME"
          status: failure
          delete_previous_comments: true


deploy_handlers: &deploy_handlers
  on_success:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> passed :+1:
            $TEXT_FILE_CONTENT
          text_file: files/slack
  on_failure:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> failed :-1:
            $TEXT_FILE_CONTENT
          text_file: files/slack
          # attachments:
          #   - title: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME build #$BUILD_NAME failed"
          #     title_link: "$ATC_EXTERNAL_URL/builds/$BUILD_ID"
          #     text: this is the attachments text
          #     footer: this is the attachments footer
          #     color: danger
  on_abort:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> aborted :-1:
            $TEXT_FILE_CONTENT
          text_file: files/slack
  on_error:
    in_parallel:
      - put: slack-alert
        params:
          channel: "#concourse"
          text: |
            <$ATC_EXTERNAL_URL/builds/$BUILD_ID|$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME/$BUILD_NAME> errored :-1:
            $TEXT_FILE_CONTENT
          text_file: files/slack


resource_types:

  # - name: slack-alert
  #   type: docker-image
  #   source:
  #     repository: arbourd/concourse-slack-alert-resource

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:

  - name: source
    type: git
    icon: github
    source:
      uri: https://github.com/mamercad/mamercad.cloudmason.git
      branch: test

  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack-webhook))

  - name: pull-request
    type: pull-request
    check_every: 24h
    source:
      repository: mamercad/mamercad.cloudmason
      access_token: ((github-access-token))

jobs:

  - name: test
    public: true
    serial: false
    plan:
      - get: pull-request
        trigger: true
        version: every

      - put: pull-request
        params:
          path: pull-request
          context: "$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME"
          status: pending

      - task: ansible-lint
        config:
          inputs:
            - name: pull-request
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: mamercad/alpine-ansible
              tag: latest
          run:
            dir: pull-request
            path: /bin/ash
            args:
              - -o
              - pipefail
              - -c
              - |
                stty cols 120
                source /venv/bin/activate
                ansible-lint 2>&1 | tee -a ../files/output
                rc=$?

                # last 10 lines for slack
                tail -10 ../files/output | tee -a ../files/slack

                # add backticks to output
                sed -i '1s/^/```\n/' ../files/output
                sed -i '$s/$/\n```/' ../files/output

                # add backticks to slack
                sed -i '1s/^/```(last 10 lines)\n/' ../files/slack
                sed -i '$s/$/\n```/'                ../files/slack

                exit $rc
          outputs:
            - name: files
    <<: *pr_handlers



  - name: awx-diff
    public: true
    serial: true
    plan:
      - get: pull-request

      - load_var: awx
        file: source/ci/concourse/pipelines/vars/awx.yml
        reveal: true

      - task: projects
        file: source/ci/concourse/pipelines/tasks/awx/projects-diff.yml
        params:
          TOWER_HOST: ((awx-host))
          TOWER_USERNAME: ((awx-username))
          TOWER_PASSWORD: ((awx-password))
          PROJECT_NAME: ((.:awx.project.name))
          PROJECT_DESCRIPTION: ((.:awx.project.description))
          PROJECT_ORGANIZATION: ((.:awx.project.organization))
          PROJECT_SCM_TYPE: ((.:awx.project.scm_type))
          PROJECT_SCM_URL: ((.:awx.project.scm_url))
          PROJECT_SCM_BRANCH: ((.:awx.project.scm_branch))
    <<: *pr_handlers


  - name: awx-deploy
    public: true
    serial: true
    plan:
      - get: source

      - load_var: awx
        file: source/ci/concourse/pipelines/vars/awx.yml
        reveal: true

      - task: projects
        file: source/ci/concourse/pipelines/tasks/awx/projects-deploy.yml
        params:
          TOWER_HOST: ((awx-host))
          TOWER_USERNAME: ((awx-username))
          TOWER_PASSWORD: ((awx-password))
          PROJECT_NAME: ((.:awx.project.name))
          PROJECT_DESCRIPTION: ((.:awx.project.description))
          PROJECT_ORGANIZATION: ((.:awx.project.organization))
          PROJECT_SCM_TYPE: ((.:awx.project.scm_type))
          PROJECT_SCM_URL: ((.:awx.project.scm_url))
          PROJECT_SCM_BRANCH: ((.:awx.project.scm_branch))


      # - task: awx
      #   config:
      #     inputs:
      #       - name: source
      #     platform: linux
      #     image_resource:
      #       type: registry-image
      #       source:
      #         repository: mamercad/alpine-ansible
      #         tag: latest
      #     params:
      #       TOWER_HOST: ((awx-host))
      #       TOWER_USERNAME: ((awx-username))
      #       TOWER_PASSWORD: ((awx-password))
      #       PROJECT_NAME: ((.:awx.project.name))
      #       PROJECT_DESCRIPTION: ((.:awx.project.description))
      #       PROJECT_ORGANIZATION: ((.:awx.project.organization))
      #       PROJECT_SCM_TYPE: ((.:awx.project.scm_type))
      #       PROJECT_SCM_URL: ((.:awx.project.scm_url))
      #       PROJECT_SCM_BRANCH: ((.:awx.project.scm_branch))
      #     run:
      #       dir: source
      #       path: /bin/ash
      #       args:
      #         - -o
      #         - pipefail
      #         - -c
      #         - |
      #           stty cols 120
      #           source /venv/bin/activate
      #           # awx ping 2>&1 | tee -a ../files/output
      #           # rc=$?

      #           awx projects get \
      #             --conf.format yaml \
      #             $PROJECT_NAME \
      #             2>&1 | tee -a ../files/before

      #           awx projects modify \
      #             --name $PROJECT_NAME \
      #             --description $PROJECT_DESCRIPTION \
      #             --scm_type $PROJECT_SCM_TYPE \
      #             --scm_url $PROJECT_SCM_URL \
      #             --scm_branch $PROJECT_SCM_BRANCH \
      #             $PROJECT_NAME \
      #             2>&1 | tee -a ../files/output
      #           rc=$?

      #           awx projects get \
      #             --conf.format yaml \
      #             $PROJECT_NAME \
      #             2>&1 | tee -a ../files/after

      #           echo "AWX Project $PROJECT_NAME before/after diff (rc=$rc):" | tee -a ../files/slack
      #           echo ""                                                      | tee -a ../files/slack
      #           diff ../files/before ../files/after                          | tee -a ../files/slack

      #           # last 10 lines for slack
      #           # tail -10 ../files/output | tee -a ../files/slack

      #           # add backticks to output
      #           sed -i '1s/^/```\n/' ../files/output
      #           sed -i '$s/$/\n```/' ../files/output

      #           # add backticks to slack
      #           # sed -i '1s/^/```(last 10 lines)\n/' ../files/slack
      #           sed -i '1s/^/```\n/' ../files/slack
      #           sed -i '$s/$/\n```/' ../files/slack

      #           exit $rc
      #     outputs:
      #       - name: files

    <<: *deploy_handlers










  # - name: deploy
  #   public: true
  #   plan:

  #     - get: source
  #       passed: ['test']
  #       trigger: true

  #     - task: ansible
  #       config:
  #         inputs:
  #           - name: source
  #         platform: linux
  #         image_resource:
  #           type: registry-image
  #           source:
  #             repository: mamercad/alpine-ansible
  #             tag: latest
  #         run:
  #           path: /bin/ash
  #           args:
  #             - -exc
  #             - |
  #               stty cols 120
  #               source /venv/bin/activate
  #               cd source
  #               ansible-playbook -i inventory/cloudmason.yml playbooks/ping.yml -l localhost -v

  #   <<: *handlers
