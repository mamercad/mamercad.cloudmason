---

resource_types:

  - name: slack-alert
    type: docker-image
    source:
      repository: arbourd/concourse-slack-alert-resource

  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:

  - name: pull-request
    type: pull-request
    check_every: 24h
    source:
      repository: mamercad/mamercad.cloudmason
      access_token: ((github-access-token))
      paths:
        - inventory/awx.yml
        - roles/awx
        - awx.yml

  - name: source
    type: git
    icon: github
    source:
      uri: https://github.com/mamercad/mamercad.cloudmason.git
      branch: main
      paths:
        - inventory/awx.yml
        - roles/awx
        - awx.yml

  - name: slack-alert
    type: slack-alert
    source:
      url: ((site.SLACK_WEBHOOK))

jobs:

  - name: test-pr
    plan:

      - get: pull-request
        trigger: true
        version: every

      - put: pull-request
        params:
          path: pull-request
          status: pending

      - task: test-pr
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine/git, tag: "latest"}
          inputs:
            - name: pull-request
          run:
            path: /bin/sh
            args:
              - -xce
              - |
                cd pull-request
                pre-commit run --verbose
          outputs:
            - name: files

  - name: pre-commit
    plan:

      - get: source
        trigger: true
        version: every

      - task: pre-commit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine/git, tag: "latest"}
          inputs:
            - name: source
          run:
            path: /bin/sh
            args:
              - -xce
              - |
                cd source
                pre-commit run --verbose
          outputs:
            - name: files

  - name: deploy
    public: true
    plan:

      - get: source
        trigger: true
        passed: ["pre-commit"]

      - task: ansible
        params:
          ANSIBLE_FORCE_COLOR: true
          CONCOURSE_SSH_KEY: ((awx.CONCOURSE_SSH_KEY))
          TOWER_HOST: ((awx.TOWER_HOST))
          TOWER_USERNAME: ((awx.TOWER_USERNAME))
          TOWER_PASSWORD: ((awx.TOWER_PASSWORD))
          AWX_USERS_MARK_PASSWORD: ((awx/users/mark.password))
          AWX_CREDENTIALS_CLOUDMASON_GITHUB_SSH_KEY: ((awx/credentials/github.ssh_key))
          AWX_CREDENTIALS_CLOUDMASON_AWX_PASSWORD: ((awx/credentials/awx.password))
          AWX_CREDENTIALS_CLOUDMASON_AWX_SSH_KEY: ((awx/credentials/awx.ssh_key))
          AWX_CREDENTIALS_CLOUDMASON_MARK_PASSWORD: ((awx/credentials/mark.password))
          AWX_CREDENTIALS_CLOUDMASON_MARK_SSH_KEY: ((awx/credentials/mark.ssh_key))
          AWX_CREDENTIALS_CLOUDMASON_MARK_SSH_KEY_UNLOCK: ((awx/credentials/mark.ssh_key_unlock))
          AWX_CREDENTIALS_CLOUDMASON_MAMERCAD_SSH_KEY: ((awx/credentials/mamercad.ssh_key))
          AWX_CREDENTIALS_CLOUDMASON_MAMERCAD_SSH_KEY_UNLOCK: ((awx/credentials/mamercad.ssh_key_unlock))
          AWX_CREDENTIALS_CLOUDMASON_VAULT_PASSWORD: ((awx/credentials/ansible-vault.password))
          AWX_NOTIFICATION_TEMPLATES_SLACK_CHANNEL: ((awx/credentials/slack.channel))
          AWX_NOTIFICATION_TEMPLATES_SLACK_BOT_TOKEN: ((awx/credentials/slack.bot_token))
          AWX_JOB_TEMPLATES_HEALTHCHECKS_ENDPOINT: ((awx/credentials/healthchecks-io.endpoint))
        config:
          inputs:
            - name: source
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: mamercad/alpine-ansible
              tag: latest
          run:
            path: /bin/ash
            args:
              - -exc
              - |
                stty cols 120

                touch concourse.key
                chmod 600 concourse.key
                echo "${CONCOURSE_SSH_KEY}" >concourse.key
                eval $(ssh-agent)
                ssh-add concourse.key
                ssh-add -l

                source /venv/bin/activate
                cd source
                ansible-playbook -i inventory/concourse.yml awx.yml -v

        on_success:
          put: slack-alert
          params:
            alert_type: success
        on_failure:
          put: slack-alert
          params:
            alert_type: failed
        on_abort:
          put: slack-alert
          params:
            alert_type: aborted
        on_error:
          put: slack-alert
          params:
            alert_type: errored
