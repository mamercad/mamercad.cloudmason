- name: set arch
  ansible.builtin.set_fact:
    arch: amd64
  when: ansible_architecture == "x86_64"

- name: set arch
  ansible.builtin.set_fact:
    arch: armv7
  when: ansible_architecture == "armv7l"

- name: download the prometheus tarball
  ansible.builtin.get_url:
    url: "{{ release_tarball }}"
    dest: /tmp/prometheus.tgz
    checksum: "sha256:{{ release_sha256 }}"
  become: true

- name: create prometheus group
  ansible.builtin.group:
    state: present
    name: prometheus
  become: true

- name: create prometheus user
  ansible.builtin.user:
    state: present
    name: prometheus
    group: prometheus
    home: /opt/prometheus
    shell: /bin/bash
  become: true

- name: create /opt/prometheus
  ansible.builtin.file:
    path: /opt/prometheus
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755
  become: true

- name: unarchive prometheus tarball
  ansible.builtin.unarchive:
    src: /tmp/prometheus.tgz
    dest: /opt/prometheus
    remote_src: true
  become: true

- name: create /opt/prometheus/storage
  ansible.builtin.file:
    state: directory
    path: /opt/prometheus/storage
    owner: prometheus
    group: prometheus
    mode: 0755
  become: true

- name: build prometheus targets (node_exporter)
  ansible.builtin.set_fact:
    node_exporter_targets: "{{ node_exporter_targets|default([],True) + [item + '.' + network.domain + ':9100'] }}"
  loop: "{{ groups.prometheus_clients }}"
  run_once: true

- name: build grafana targets (grafana)
  ansible.builtin.set_fact:
    grafana_targets: "{{ grafana_targets|default([],True) + [item + '.' + network.domain + ':443'] }}"
  loop: "{{ groups.grafana_servers }}"
  run_once: true

- name: build prometheus targets (unifi_pollers)
  ansible.builtin.set_fact:
    unifi_pollers: "{{ unifi_pollers|default([],True) + [item + '.' + network.domain + ':9130'] }}"
  loop: "{{ groups.unifi_pollers }}"
  run_once: true

- name: build prometheus targets (powerdns_auth_targets)
  ansible.builtin.set_fact:
    powerdns_auth_targets: "{{ powerdns_auth_targets|default([],True) + [item + '.' + network.domain + ':8081'] }}"
  loop: "{{ groups.powerdns_servers }}"
  run_once: true

- name: build prometheus targets (powerdns_rec_targets)
  ansible.builtin.set_fact:
    powerdns_rec_targets: "{{ powerdns_rec_targets|default([],True) + [item + '.' + network.domain + ':8082'] }}"
  loop: "{{ groups.powerdns_servers }}"
  run_once: true

- name: build prometheus targets (snmp_targets)
  ansible.builtin.set_fact:
    snmp_targets: "{{ snmp_targets|default([],True) + [item] }}"
  loop: "{{ groups.snmp_targets }}"
  run_once: true

- name: deploy prometheus config
  ansible.builtin.copy:
    dest: /opt/prometheus/prometheus-{{ version }}.linux-amd64/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: 0644
    content: |
      global:
        scrape_interval: 1m
        scrape_timeout: 10s
        evaluation_interval: 5m
      alerting:
        alertmanagers:
        - static_configs:
          - targets: []
      rule_files: []
      scrape_configs:
        - job_name: prometheus
          static_configs:
          - targets: {{ node_exporter_targets }}
        - job_name: grafana
          scheme: https
          static_configs:
          - targets: {{ grafana_targets }}
        - job_name: powerdns_authoritative
          static_configs:
          - targets: {{ powerdns_auth_targets }}
          scrape_interval: 1m
          scrape_timeout: 10s
        - job_name: powerdns_recursor
          static_configs:
          - targets: {{ powerdns_rec_targets }}
          scrape_interval: 1m
          scrape_timeout: 10s
        #- job_name: 'snmp'
        #  static_configs:
        #    - targets: {{ snmp_targets }}
        #  metrics_path: /snmp
        #  params:
        #    module: [if_mib]
        #  relabel_configs:
        #    - source_labels: [__address__]
        #      target_label: __param_target
        #    - source_labels: [__param_target]
        #      target_label: instance
        #    - target_label: __address__
        #      replacement: 127.0.0.1:9116
        #  scrape_interval: 15m
        #  scrape_timeout: 5m
        #- job_name: dns
        #  metrics_path: /probe
        #  static_configs:
        #    - targets: {{ dns_targets }}
        #  relabel_configs:
        #    - source_labels: [__address__]
        #      regex: '(.*)@.*@.*'
        #      replacement: $1
        #      target_label: 'instance'      # instance label for Prometheus datapoints
        #    - source_labels: [__address__]
        #      regex: '.*@(.*)@.*'
        #      replacement: $1
        #      target_label: __param_module  # module parameter to blackbox exporter
        #    - source_labels: [__address__]
        #      regex: '.*@(.*)@.*'
        #      replacement: $1
        #      target_label: module          # module label for Prometheus datapoints
        #    - source_labels: [__address__]
        #      regex: '.*@.*@(.*)'
        #      replacement: $1
        #      target_label: __param_target  # target parameter to blackbox exporter
        #    - source_labels: [__address__]
        #      regex: '.*@.*@(.*)'
        #      replacement: $1
        #      target_label: resolver        # resolver label for Prometheus datapoints
        #    - source_labels: [__address__]
        #      regex: '(.*)@.*@.*'
        #      replacement: $1
        #      target_label: __address__     # The blackbox exporter's real hostname:port.
        #  scrape_interval: 15m
        #  scrape_timeout: 5m
        - job_name: statsd
          static_configs:
            - targets: {{ statsd_targets }}
          metrics_path: /metrics
          scrape_interval: 1m
          scrape_timeout: 10s
  notify: restart-prometheus
  become: true

- name: deploy prometheus systemd unit
  ansible.builtin.copy:
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
    content: |
      [Unit]
      Description=Prometheus
      Wants=network-online.target
      After=network-online.target
      [Service]
      User=prometheus
      Group=prometheus
      Type=simple
      ExecStart=/opt/prometheus/prometheus-{{ version }}.linux-amd64/prometheus \
          --config.file /opt/prometheus/prometheus-{{ version }}.linux-amd64/prometheus.yml \
          --storage.tsdb.path /opt/prometheus/storage --storage.tsdb.retention.time=45d
      [Install]
      WantedBy=multi-user.target
  become: true
  notify: restart-prometheus

- name: start and enable prometheus
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true
  become: true
