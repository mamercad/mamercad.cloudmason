- name: create metallb clusterrolebinding
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        labels:
          app: metallb
        name: metallb-system:controller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: metallb-system:controller
      subjects:
      - kind: ServiceAccount
        name: controller
        namespace: metallb-system

- name: create metallb clusterrolebinding
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        labels:
          app: metallb
        name: metallb-system:speaker
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: metallb-system:speaker
      subjects:
      - kind: ServiceAccount
        name: speaker
        namespace: metallb-system

- name: create metallb rolebinding
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        labels:
          app: metallb
        name: config-watcher
        namespace: metallb-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: config-watcher
      subjects:
      - kind: ServiceAccount
        name: controller
      - kind: ServiceAccount
        name: speaker

- name: create metallb rolebinding
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        labels:
          app: metallb
        name: pod-lister
        namespace: metallb-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: pod-lister
      subjects:
      - kind: ServiceAccount
        name: speaker

- name: create metallb daemonset
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        labels:
          app: metallb
          component: speaker
        name: speaker
        namespace: metallb-system
      spec:
        selector:
          matchLabels:
            app: metallb
            component: speaker
        template:
          metadata:
            annotations:
              prometheus.io/port: '7472'
              prometheus.io/scrape: 'true'
            labels:
              app: metallb
              component: speaker
          spec:
            containers:
            - args:
              - --port=7472
              - --config=config
              env:
              - name: METALLB_NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: METALLB_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: METALLB_ML_BIND_ADDR
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              # needed when another software is also using memberlist / port 7946
              #- name: METALLB_ML_BIND_PORT
              #  value: "7946"
              - name: METALLB_ML_LABELS
                value: "app=metallb,component=speaker"
              - name: METALLB_ML_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: METALLB_ML_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: memberlist
                    key: secretkey
              image: metallb/speaker:v0.9.6
              imagePullPolicy: Always
              name: speaker
              ports:
              - containerPort: 7472
                name: monitoring
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
                  - SYS_ADMIN
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
            hostNetwork: true
            nodeSelector:
              kubernetes.io/os: linux
            serviceAccountName: speaker
            terminationGracePeriodSeconds: 2
            tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master


- name: create metallb deployment
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app: metallb
          component: controller
        name: controller
        namespace: metallb-system
      spec:
        revisionHistoryLimit: 3
        selector:
          matchLabels:
            app: metallb
            component: controller
        template:
          metadata:
            annotations:
              prometheus.io/port: '7472'
              prometheus.io/scrape: 'true'
            labels:
              app: metallb
              component: controller
          spec:
            containers:
            - args:
              - --port=7472
              - --config=config
              image: metallb/controller:v0.9.6
              imagePullPolicy: Always
              name: controller
              ports:
              - containerPort: 7472
                name: monitoring
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                readOnlyRootFilesystem: true
            nodeSelector:
              kubernetes.io/os: linux
            securityContext:
              runAsNonRoot: true
              runAsUser: 65534
            serviceAccountName: controller
            terminationGracePeriodSeconds: 0

- name: create metallb secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      data:
        secretkey: "{{ secretkey }}"
      kind: Secret
      metadata:
        name: memberlist
        namespace: metallb-system
      type: Opaque

- name: create metallb configmap
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - {{ range }}
      kind: ConfigMap
      metadata:
        name: config
        namespace: metallb-system
