- name: include raspian variables
  ansible.builtin.include_vars:
    file: raspian.yml

- name: create the traefik group
  ansible.builtin.group:
    name: "{{ traefik_group }}"
  become: true

- name: create the traefik user
  ansible.builtin.user:
    name: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    shell: "{{ traefik_shell }}"
    create_home: true
  become: true

- name: pull down the traefik binary tarball
  ansible.builtin.get_url:
    url: "{{ traefik_tarball }}"
    checksum: "sha256:{{ traefik_sha256 }}"
    dest: /home/traefik/traefik_v{{ traefik_version }}_linux_armv7.tar.gz
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0644
  become: true

- name: extract the traefik tarball
  ansible.builtin.unarchive:
    src: "{{ traefik_home }}/traefik_v{{ traefik_version }}_linux_armv7.tar.gz"
    dest: "{{ traefik_home }}"
    remote_src: true
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    creates: "{{ traefik_home }}/traefik"
  become: true

- name: deploy traefik.yaml
  ansible.builtin.copy:
    dest: "{{ traefik_home }}/traefik.yaml"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0644
    backup: true
    content: |
      api: {}
      defaultEntryPoints:
        - http
        - https
      entryPoints:
        http:
          address: :80
          http:
            redirections:
              entryPoint:
                to: https
                scheme: https
        https:
          address: :443
        traefik:
          address: :8080
      providers:
        file:
          filename: "{{ traefik_home }}/traefik_dynamic.yaml"
      certificatesResolvers:
        myresolver:
          acme:
            email: "{{ traefik_cloudflare_api_email }}"
            storage: "{{ traefik_home }}/acme.json"
            caServer: https://acme-v02.api.letsencrypt.org/directory
            dnsChallenge:
              provider: cloudflare
              delayBeforeCheck: 0
              resolvers:
                - 1.1.1.1:53
                - 8.8.8.8:53
      log:
        level: DEBUG
        # filePath: '{{ traefik_home }}/traefik.log'
  notify: restart-traefik
  become: true

- name: deploy traefik_dynamic.yaml
  ansible.builtin.copy:
    dest: "{{ traefik_home }}/traefik_dynamic.yaml"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0644
    backup: true
    content: |
      tcp:
        routers:
          lenovo-ttyd:
            rule: HostSNI(`*`)
            service: lenovo-repl-ttyd
            entryPoints:
              - lenovo-replbot-ttyd
          lenovo-sshd:
            rule: HostSNI(`*`)
            service: lenovo-repl-sshd
            entryPoints:
              - lenovo-replbot-sshd
          thinkpad-ttyd:
            rule: HostSNI(`*`)
            service: thinkpad-repl-ttyd
            entryPoints:
              - thinkpad-replbot-ttyd
          thinkpad-sshd:
            rule: HostSNI(`*`)
            service: thinkpad-repl-sshd
            entryPoints:
              - thinkpad-replbot-sshd
        services:
          lenovo-replbot-ttyd:
            loadBalancer:
              servers:
                - address: lenovo.cloudmason.org:8383
          lenovo-replbot-sshd:
            loadBalancer:
              servers:
                - address: lenovo.cloudmason.org:8384
          thinkpad-replbot-ttyd:
            loadBalancer:
              servers:
                - address: thinkpad.cloudmason.org:7373
          thinkpad-replbot-sshd:
            loadBalancer:
              servers:
                - address: thinkpad.cloudmason.org:7374
      http:
        routers:
          apex:
            rule: Host(`cloudmason.org`)
            service: apex
            tls:
              certResolver: myresolver
              domains:
                - main: cloudmason.org
                  sans:
                    - '*.cloudmason.org'
          awx:
            rule: Host(`awx.cloudmason.org`)
            service: awx
            tls: {}
          awx-dev:
            rule: Host(`awx-dev.cloudmason.org`)
            service: awx-dev
            tls: {}
          opennebula:
            rule: Host(`opennebula.cloudmason.org`)
            service: opennebula
            tls: {}
          fireedge:
            rule: Host(`fireedge.cloudmason.org`)
            service: fireedge
            tls: {}
          zabbix:
            rule: Host(`zabbix.cloudmason.org`)
            service: zabbix
            tls: {}
          concourse:
            rule: Host(`concourse.cloudmason.org`)
            service: concourse
            tls: {}
          vault:
            rule: Host(`vault.cloudmason.org`)
            service: vault
            tls: {}
          grafana:
            rule: Host(`grafana.cloudmason.org`)
            service: grafana
            tls: {}
          prometheus:
            rule: Host(`prometheus.cloudmason.org`)
            service: prometheus
            tls: {}
          web:
            rule: Host(`web.cloudmason.org`)
            service: web
            tls: {}
          www:
            rule: Host(`www.cloudmason.org`)
            service: www
            tls: {}
          unifi:
            rule: Host(`unifi.cloudmason.org`)
            service: unifi
            tls: {}
          nzbget:
            rule: Host(`nzbget.cloudmason.org`)
            service: nzbget
            tls: {}
          sonarr:
            rule: Host(`sonarr.cloudmason.org`)
            service: sonarr
            tls: {}
          radarr:
            rule: Host(`radarr.cloudmason.org`)
            service: radarr
            tls: {}
          thelounge:
            rule: Host(`thelounge.cloudmason.org`)
            service: thelounge
            tls: {}
          qnapweb:
            rule: Host(`qnapweb.cloudmason.org`)
            service: qnapweb
            tls: {}
        middlewares:
          admin-user:
            basicAuth:
              users:
                - "{{ traefik_admin_username }}:{{ traefik_admin_password }}"
          zabbix:
            addPrefix:
              prefix: /zabbix
        services:
          apex:
            loadBalancer:
              servers:
                - url: http://cloudmason.org:8000/
          awx:
            loadBalancer:
              servers:
                - url: http://awx-service.awx.thinkpad.cloudmason.org:80/
          awx-dev:
            loadBalancer:
              servers:
                - url: http://awx-dev-service.default.lenovo.cloudmason.org:80/
          opennebula:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:9869/
          fireedge:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:2616/
          zabbix:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:8080/
          concourse:
            loadBalancer:
              servers:
                - url: http://concourse-web.concourse-main.thinkpad.cloudmason.org:8080/
          vault:
            loadBalancer:
              servers:
                - url: http://vault-ui.vault-main.thinkpad.cloudmason.org:8200/
          grafana:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:3000/
          prometheus:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:9090/
          web:
            loadBalancer:
              servers:
                - url: http://web.cloudmason.org:8000/
          www:
            loadBalancer:
              servers:
                - url: http://web.cloudmason.org:8000/
          unifi:
            loadBalancer:
              servers:
                - url: https://cloudkey2.cloudmason.org:8443/
          nzbget:
            loadBalancer:
              servers:
                - url: http://qnap.cloudmason.org:11000/
          sonarr:
            loadBalancer:
              servers:
                - url: http://qnap.cloudmason.org:11001/
          radarr:
            loadBalancer:
              servers:
                - url: http://qnap.cloudmason.org:11002/
          thelounge:
            loadBalancer:
              servers:
                - url: http://thinkpad.cloudmason.org:9000/
          qnapweb:
            loadBalancer:
              servers:
                - url: http://qnap.cloudmason.org:10000/
      tls:
        options:
          default:
            minVersion: VersionTLS12
          mintls13:
            minVersion: VersionTLS13
  notify: restart-traefik
  become: true

- name: give net priv ports to the traefik binary
  community.general.capabilities:
    path: "{{ traefik_home }}/traefik"
    capability: cap_net_bind_service=+ep
    state: present
  register: netcap
  changed_when: netcap.stdout | default('') != ''
  become: true

- name: deploy the traefik systemd unit file
  ansible.builtin.copy:
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0644
    content: |
      [Unit]
      Description=Traefik
      Documentation=https://doc.traefik.io/traefik/

      [Service]
      User={{ traefik_user }}
      AmbientCapabilities=CAP_NET_BIND_SERVICE
      Type=notify
      Environment=CF_DNS_API_TOKEN={{ traefik_cloudflare_api_key }}
      ExecStart={{ traefik_home }}/traefik --configFile={{ traefik_home }}/traefik.yaml
      Restart=always
      WatchdogSec=1s

      [Install]
      WantedBy=multi-user.target
  become: true

- name: start and enable traefik
  ansible.builtin.systemd:
    name: traefik
    state: started
    enabled: true
    daemon_reload: true
  become: true
